{
    "openapi": "3.0.0",
    "info": {
        "title": "Fatourti Mobile Application APIS",
        "description": "API Description",
        "version": "1.0.0"
    },
    "paths": {
        "/api/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Authenticate a financial manager ",
                "description": "Authenticates a financial manager and returns a Sanctum Bearer token upon successful login. The token can be used for subsequent authenticated requests.",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "requestBody": {
                    "description": "User credentials for authentication",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User's email",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "description": "User's password",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User authenticated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "description": "Authenticated user's details",
                                            "type": "object"
                                        },
                                        "token": {
                                            "description": "Sanctum Bearer token",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout financial manager",
                "description": "Logs out the authenticated user by deleting their tokens.",
                "operationId": "logoutUser",
                "responses": {
                    "200": {
                        "description": "Logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "Logged out successfully"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get financial manager details",
                "description": "Retrieves the details of the authenticated user.",
                "operationId": "getUserDetails",
                "responses": {
                    "200": {
                        "description": "User details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "user": {
                                        "id": 1,
                                        "name": "salim yaa",
                                        "email": "yaa@exax.com",
                                        "phone": "12345678",
                                        "adresse": "123 St",
                                        "organization_name": "Organization"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Auth"
                ],
                "summary": "Edit financial manager details",
                "description": "Updates the details of the authenticated user.",
                "operationId": "editUser",
                "requestBody": {
                    "description": "User details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "phone",
                                    "adresse"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "salim yaa"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "yaa@exa.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "1235678"
                                    },
                                    "adresse": {
                                        "type": "string",
                                        "example": "123 St"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "User updated successfully",
                                    "user": {
                                        "id": 1,
                                        "name": "salim yaa",
                                        "email": "yaa@exa.com",
                                        "phone": "12345678",
                                        "adresse": "123 St",
                                        "organization_name": "Organization"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/brands": {
            "get": {
                "tags": [
                    "Brands"
                ],
                "summary": "Get all brands for the authenticated user",
                "description": "Retrieves all brands associated with the authenticated user's organization.",
                "operationId": "getBrandsForUser",
                "responses": {
                    "200": {
                        "description": "List of brands",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "example": {
                                            "id": 1,
                                            "organization_id": 1,
                                            "name": "Nike",
                                            "description": "Leading sports brand"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Brands"
                ],
                "summary": "Create a new brand",
                "description": "Creates a new brand record in the database.",
                "operationId": "storeBrand",
                "requestBody": {
                    "description": "Brand details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Nike"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Leading sports brand"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Brand created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "id": 1,
                                    "organization_id": 1,
                                    "name": "Nike",
                                    "description": "Leading sports brand"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/brands/{id}": {
            "get": {
                "tags": [
                    "Brands"
                ],
                "summary": "Get a specific brand by ID",
                "description": "Retrieves a specific brand's details.",
                "operationId": "showBrand",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the brand",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Brand details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "id": 1,
                                    "organization_id": 1,
                                    "name": "Nike",
                                    "description": "Leading sports brand"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Brand not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Brands"
                ],
                "summary": "Update a specific brand by ID",
                "description": "Updates an existing brand record in the database.",
                "operationId": "updateBrand",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the brand",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Brand details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Nike"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Leading sports brand"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Brand updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "id": 1,
                                    "organization_id": 1,
                                    "name": "Nike",
                                    "description": "Leading sports brand"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Brand not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Brands"
                ],
                "summary": "Delete a specific brand by ID",
                "description": "Deletes a specific brand record from the database.",
                "operationId": "deleteBrand",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the brand",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Brand deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Brand not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/categorys": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get all categories for the authenticated user",
                "description": "Retrieves all categories associated with the authenticated user's organization.",
                "operationId": "getCategoriesForUser",
                "responses": {
                    "200": {
                        "description": "List of categories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "example": {
                                            "id": 1,
                                            "organization_id": 1,
                                            "category": "Electronics",
                                            "reference": "ELEC123",
                                            "description": "Category for electronic items"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "description": "Creates a new category record in the database.",
                "operationId": "storeCategory",
                "requestBody": {
                    "description": "Category details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "category",
                                    "reference",
                                    "description"
                                ],
                                "properties": {
                                    "category": {
                                        "type": "string",
                                        "example": "Electronics"
                                    },
                                    "reference": {
                                        "type": "string",
                                        "example": "ELEC123"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Category for electronic items"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "id": 1,
                                    "organization_id": 1,
                                    "category": "Electronics",
                                    "reference": "ELEC123",
                                    "description": "Category for electronic items"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/categorys/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get a specific category by ID",
                "description": "Retrieves a specific category's details.",
                "operationId": "showCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "id": 1,
                                    "organization_id": 1,
                                    "category": "Electronics",
                                    "reference": "ELEC123",
                                    "description": "Category for electronic items"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update a specific category by ID",
                "description": "Updates an existing category record in the database.",
                "operationId": "updateCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Category details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "category",
                                    "reference",
                                    "description"
                                ],
                                "properties": {
                                    "category": {
                                        "type": "string",
                                        "example": "Electronics"
                                    },
                                    "reference": {
                                        "type": "string",
                                        "example": "El123"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Category for electronic items"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "id": 1,
                                    "organization_id": 1,
                                    "category": "Electronics",
                                    "reference": "El123",
                                    "description": "Category for electronic items"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a specific category by ID",
                "description": "Deletes a specific category record from the database.",
                "operationId": "deleteCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/clients": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "summary": "Get all clients for the authenticated user",
                "description": "Retrieves all clients associated with the authenticated user's organization.",
                "operationId": "getClientsForUser",
                "parameters": [
                    {
                        "name": "recherche",
                        "in": "query",
                        "description": "Search query to filter clients by name or identification",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of clients"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Clients"
                ],
                "summary": "Create a new client",
                "description": "Creates a new client record in the database.",
                "operationId": "storeClient",
                "requestBody": {
                    "description": "Client details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "identification",
                                    "email",
                                    "phone",
                                    "adresse"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Salim Yaa"
                                    },
                                    "identification": {
                                        "type": "string",
                                        "example": "ID123456"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "yaa@exa.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "12345678"
                                    },
                                    "adresse": {
                                        "type": "string",
                                        "example": "123 Main St, City, Country"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Client created successfully"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/clients/{id}": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "summary": "Get a specific client by ID",
                "description": "Retrieves a specific client's details.",
                "operationId": "showClient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the client",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Client details"
                    },
                    "404": {
                        "description": "Client not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Clients"
                ],
                "summary": "Update a specific client by ID",
                "description": "Updates an existing client record in the database.",
                "operationId": "updateClient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the client",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Client details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Salim Yaa"
                                    },
                                    "identification": {
                                        "type": "string",
                                        "example": "ID123456"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "yaa@exa.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "12345678"
                                    },
                                    "adresse": {
                                        "type": "string",
                                        "example": "123 Main St, City, Country"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Client updated successfully"
                    },
                    "404": {
                        "description": "Client not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Clients"
                ],
                "summary": "Delete a specific client by ID",
                "description": "Deletes a specific client record from the database.",
                "operationId": "deleteClient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the client",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Client deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Client not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/factures": {
            "post": {
                "tags": [
                    "Factures(Invoices,Puschase Orders,Estimates)"
                ],
                "summary": "Create a new facture",
                "description": "Creates a new facture record in the database. (0:Invoices,1:Estimates,2:Puschase Orders) ",
                "operationId": "storeFacture",
                "requestBody": {
                    "description": "Facture details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "date",
                                    "due_date",
                                    "client_id",
                                    "type"
                                ],
                                "properties": {
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-06-20"
                                    },
                                    "due_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-07-20"
                                    },
                                    "discount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": "10.5"
                                    },
                                    "client_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "taxe_id": {
                                        "type": "integer",
                                        "example": "2"
                                    },
                                    "type": {
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1,
                                            2
                                        ],
                                        "example": "0"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Facture created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "id": 1,
                                    "date": "2024-06-20",
                                    "due_date": "2024-07-20",
                                    "client_id": 1
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/invoices": {
            "get": {
                "tags": [
                    "Factures(Invoices,Puschase Orders,Estimates)"
                ],
                "summary": "Get all invoices for the authenticated user",
                "description": "Retrieves all invoices associated with the authenticated user's organization.",
                "operationId": "getInvoicesForUser",
                "responses": {
                    "200": {
                        "description": "List of invoices",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "example": {
                                            "id": 1,
                                            "date": "2024-06-20",
                                            "client_id": 1
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/estimates": {
            "get": {
                "tags": [
                    "Factures(Invoices,Puschase Orders,Estimates)"
                ],
                "summary": "Get all estimates for the authenticated user",
                "description": "Retrieves all estimates associated with the authenticated user's organization.",
                "operationId": "getEstimatesForUser",
                "responses": {
                    "200": {
                        "description": "List of estimates",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "example": {
                                            "id": 2,
                                            "date": "2024-06-21",
                                            "client_id": 1
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/purchases": {
            "get": {
                "tags": [
                    "Factures(Invoices,Puschase Orders,Estimates)"
                ],
                "summary": "Get all purchase orders for the authenticated user",
                "description": "Retrieves all purchase orders associated with the authenticated user's organization.",
                "operationId": "getPurchaseOrdersForUser",
                "responses": {
                    "200": {
                        "description": "List of purchase orders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "example": {
                                            "id": 3,
                                            "date": "2024-06-22",
                                            "client_id": 1
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/factures/{id}": {
            "get": {
                "tags": [
                    "Factures(Invoices,Puschase Orders,Estimates)"
                ],
                "summary": "Get a specific facture by ID",
                "description": "Retrieves a specific facture and its associated products.",
                "operationId": "showFacture",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the facture",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Facture details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "id": 1,
                                    "date": "2024-06-20",
                                    "due_date": "2024-07-20",
                                    "client_id": 1
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Facture not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Factures(Invoices,Puschase Orders,Estimates)"
                ],
                "summary": "Update a specific facture by ID",
                "description": "Updates an existing facture record in the database.",
                "operationId": "updateFacture",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the facture",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Facture details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-06-21"
                                    },
                                    "due_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-07-21"
                                    },
                                    "discount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": "15.75"
                                    },
                                    "client_id": {
                                        "type": "integer",
                                        "example": "2"
                                    },
                                    "taxe_id": {
                                        "type": "integer",
                                        "example": "3"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Facture updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "id": 1,
                                    "date": "2024-06-21",
                                    "due_date": "2024-07-21",
                                    "client_id": 1
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Facture not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Factures(Invoices,Puschase Orders,Estimates)"
                ],
                "summary": "Delete a specific facture by ID",
                "description": "Deletes a specific facture record from the database.",
                "operationId": "deleteFacture",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the facture",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Facture deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Facture not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/factures/{facture_id}/factureprods": {
            "get": {
                "tags": [
                    "Elements facture_products for Facture"
                ],
                "summary": "Get all  elements  in  facture_product for a specific facture",
                "description": "Returns a list of facture_products  associated with a facture",
                "operationId": "indexFactureprods",
                "parameters": [
                    {
                        "name": "facture_id",
                        "in": "path",
                        "description": "ID of the facture",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of facture_products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Facture not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Elements facture_products for Facture"
                ],
                "summary": "Create a new specific a element in  facture_product ",
                "description": "Create a new element in  facture_product associated with a facture",
                "operationId": "storeFactureprod",
                "parameters": [
                    {
                        "name": "facture_id",
                        "in": "path",
                        "description": "ID of the facture",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Created facture_product",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/factures/{facture_id}/factureprods/{id}": {
            "get": {
                "tags": [
                    "Elements facture_products for Facture"
                ],
                "summary": "Get a specific a element facture_product from specific facture   by ID",
                "description": "Returns a single facture_product",
                "operationId": "showFactureprod",
                "parameters": [
                    {
                        "name": "facture_id",
                        "in": "path",
                        "description": "ID of the facture",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the facture_product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "facture_product found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "facture_product not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Elements facture_products for Facture"
                ],
                "summary": "Update a element facture_product from specific facture  by ID",
                "description": "Update a specific facture_product",
                "operationId": "updateFactureprod",
                "parameters": [
                    {
                        "name": "facture_id",
                        "in": "path",
                        "description": "ID of the facture",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the facture_product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated facture_product",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "facture_product not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Elements facture_products for Facture"
                ],
                "summary": "Delete a element facture_product from specific facture  by ID",
                "description": "Delete a specific facture_product",
                "operationId": "deleteFactureprod",
                "parameters": [
                    {
                        "name": "facture_id",
                        "in": "path",
                        "description": "ID of the facture",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the element facture_product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "facture_product deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Factureprod not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get all products",
                "description": "Get all products for the authenticated user's organization",
                "operationId": "getProducts",
                "responses": {
                    "200": {
                        "description": "List of products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "reference": {
                                                "type": "string",
                                                "example": "PRD001"
                                            },
                                            "designation": {
                                                "type": "string",
                                                "example": "Product Description"
                                            },
                                            "category_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "brand_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "price": {
                                                "type": "number",
                                                "format": "float",
                                                "example": 100.5
                                            },
                                            "tva_id": {
                                                "type": "integer",
                                                "example": 1
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Create a new product",
                "description": "Create a new product record for the authenticated user's organization",
                "operationId": "createProduct",
                "requestBody": {
                    "description": "Product data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "reference",
                                    "designation",
                                    "category_id",
                                    "brand_id",
                                    "price",
                                    "tva_id"
                                ],
                                "properties": {
                                    "reference": {
                                        "type": "string",
                                        "example": "PRD001"
                                    },
                                    "designation": {
                                        "type": "string",
                                        "example": "Product Description"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "brand_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 100.5
                                    },
                                    "tva_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "reference": {
                                            "type": "string",
                                            "example": "PRD001"
                                        },
                                        "designation": {
                                            "type": "string",
                                            "example": "Product Description"
                                        },
                                        "category_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "brand_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "price": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 100.5
                                        },
                                        "tva_id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "reference": [
                                                    "The reference field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/products/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product by ID",
                "description": "Get a specific product by its ID",
                "operationId": "getProductById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "reference": {
                                            "type": "string",
                                            "example": "PRD001"
                                        },
                                        "designation": {
                                            "type": "string",
                                            "example": "Product Description"
                                        },
                                        "category_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "brand_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "price": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 100.5
                                        },
                                        "tva_id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Update a product",
                "description": "Update a specific product record for the authenticated user's organization",
                "operationId": "updateProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Product data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "reference",
                                    "designation",
                                    "category_id",
                                    "brand_id",
                                    "price",
                                    "tva_id"
                                ],
                                "properties": {
                                    "reference": {
                                        "type": "string",
                                        "example": "PRD001"
                                    },
                                    "designation": {
                                        "type": "string",
                                        "example": "Product Description"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "brand_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 100.5
                                    },
                                    "tva_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "reference": {
                                            "type": "string",
                                            "example": "PRD001"
                                        },
                                        "designation": {
                                            "type": "string",
                                            "example": "Product Description"
                                        },
                                        "category_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "brand_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "price": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 100.5
                                        },
                                        "tva_id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "reference": [
                                                    "The reference field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete a product",
                "description": "Delete a specific product record for the authenticated user's organization",
                "operationId": "deleteProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/taxes": {
            "get": {
                "tags": [
                    "Taxes"
                ],
                "summary": "Get taxes for user",
                "description": "Get all tax records for the authenticated user's organization",
                "operationId": "getTaxesForUser",
                "responses": {
                    "200": {
                        "description": "Taxes retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "wording": {
                                                "type": "string",
                                                "example": "Tax Description"
                                            },
                                            "short_name": {
                                                "type": "string",
                                                "example": "Tax"
                                            },
                                            "value": {
                                                "type": "number",
                                                "example": 15.5
                                            },
                                            "value_type": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "application": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "organization_id": {
                                                "type": "integer",
                                                "example": 1
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Taxes"
                ],
                "summary": "Create a new tax record",
                "description": "Create a new tax record for the authenticated user's organization",
                "operationId": "createTax",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "wording": {
                                        "type": "string",
                                        "example": "Tax Description"
                                    },
                                    "short_name": {
                                        "type": "string",
                                        "example": "Tax"
                                    },
                                    "value": {
                                        "type": "number",
                                        "example": 15.5
                                    },
                                    "value_type": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "application": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tax created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "wording": {
                                            "type": "string",
                                            "example": "Tax Description"
                                        },
                                        "short_name": {
                                            "type": "string",
                                            "example": "Tax"
                                        },
                                        "value": {
                                            "type": "number",
                                            "example": 15.5
                                        },
                                        "value_type": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "application": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "organization_id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/taxes/{id}": {
            "get": {
                "tags": [
                    "Taxes"
                ],
                "summary": "Get a specific tax",
                "description": "Get a specific tax record for the authenticated user's organization",
                "operationId": "getTax",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Tax ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tax retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "wording": {
                                            "type": "string",
                                            "example": "Tax Description"
                                        },
                                        "short_name": {
                                            "type": "string",
                                            "example": "Tax"
                                        },
                                        "value": {
                                            "type": "number",
                                            "example": 15.5
                                        },
                                        "value_type": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "application": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "organization_id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tax not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tax not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Taxes"
                ],
                "summary": "Update a tax",
                "description": "Update a specific tax record for the authenticated user's organization",
                "operationId": "updateTax",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Tax ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "wording": {
                                        "type": "string",
                                        "example": "Updated Tax Description"
                                    },
                                    "short_name": {
                                        "type": "string",
                                        "example": "UpdTax"
                                    },
                                    "value": {
                                        "type": "number",
                                        "example": 20.5
                                    },
                                    "value_type": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "application": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tax updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "wording": {
                                            "type": "string",
                                            "example": "Updated Tax Description"
                                        },
                                        "short_name": {
                                            "type": "string",
                                            "example": "UpdTax"
                                        },
                                        "value": {
                                            "type": "number",
                                            "example": 20.5
                                        },
                                        "value_type": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "application": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "organization_id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tax not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tax not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Taxes"
                ],
                "summary": "Delete a tax",
                "description": "Delete a specific tax record for the authenticated user's organization",
                "operationId": "deleteTax",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Tax ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tax deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tax deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tax not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tax not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/tvas": {
            "get": {
                "tags": [
                    "Tva"
                ],
                "summary": "Get all Tvas for the authenticated user's organization",
                "operationId": "995d3633a58cca5ea91c95cb4e769c6f",
                "responses": {
                    "200": {
                        "description": "List of Tvas",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "organization_id": {
                                                "type": "integer"
                                            },
                                            "country_id": {
                                                "type": "integer"
                                            },
                                            "country_name": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Tva"
                ],
                "summary": "Store a new Tva",
                "operationId": "498b286f29db4d635b2c1670326ecc62",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "value"
                                ],
                                "properties": {
                                    "value": {
                                        "type": "number",
                                        "example": 19.5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tva created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "organization_id": {
                                            "type": "integer"
                                        },
                                        "value": {
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/tvas/{id}": {
            "get": {
                "tags": [
                    "Tva"
                ],
                "summary": "Get a specific Tva by ID",
                "operationId": "50fc2fe57454de69869bc603eb034578",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tva details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "organization_id": {
                                            "type": "integer"
                                        },
                                        "value": {
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tva or Organization not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Tva"
                ],
                "summary": "Update an existing Tva",
                "operationId": "b2a1d09b416560715b05b191a9311418",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "value"
                                ],
                                "properties": {
                                    "value": {
                                        "type": "number",
                                        "example": 20
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tva updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "organization_id": {
                                            "type": "integer"
                                        },
                                        "value": {
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tva or Organization not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Tva"
                ],
                "summary": "Delete a Tva",
                "operationId": "a728ae6ba925b1d979f3f3e44f5f35b4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tva deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tva deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tva or Organization not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    }
}